steps:
- id: 'ztf init'
  name: 'hashicorp/terraform:1.0.0'
  entrypoint: 'sh'
  args: 
  - '-c'
  - |
      for dir in envs/*/
      do 
        cd ${dir}   
        env=${dir%*/}
        env=${env#*/}
        echo ""
        echo "*************** TERRAFORM INIT ******************"
        echo "******* At environment: ${env} ********"
        echo "*************************************************"
        terraform init || exit 1
        cd ../../
      done
# [START tf-plan]
- id: 'tf plan'
  name: 'hashicorp/terraform:1.0.0'
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
      for dir in envs/*/
      do 
        cd ${dir}   
        env=${dir%*/}
        env=${env#*/}  
        echo ""
        echo "*************** TERRAFOM PLAN ******************"
        echo "******* At environment: ${env} ********"
        echo "*************************************************"
        terraform plan || exit 1
        cd ../../
      done
# [END tf-plan]

# [START tf-apply]
- id: 'tf apply'
  name: 'hashicorp/terraform:1.0.0'
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
      if [ "$BRANCH_NAME" == "main" ]; then
        for dir in envs/*/
          do 
            cd ${dir}   
            env=${dir%*/}
            env=${env#*/}  
            echo ""
            echo "*************** TERRAFOM APPLY ******************"
            echo "******* At environment: ${env} ********"
            echo "*************************************************"
            terraform apply -auto-approve || exit 1
            cd ../../
          done
      else
        echo "***************************** SKIPPING APPLYING *******************************"
        echo "Branch '$BRANCH_NAME' does not represent an official environment."
        echo "*******************************************************************************"
      fi
# [END tf-apply]  